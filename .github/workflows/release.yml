name: 'release'

on:
  push:
    tags: ['*']

jobs:
  deploy-crouton-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
      WORDPRESS_PASSWORD: ${{ secrets.WORDPRESS_PASSWORD }}
      BUILD_DIR: build
      DIST_DIR_S3_JS: dist_croutonjs/s3
      DIST_DIR_S3: dist/s3
      DIST_DIR_GITHUB_JS: dist_croutonjs/github
      DIST_DIR_GITHUB: dist/github
      GITHUB_RELEASE_FILENAME_JS: croutonjs.zip
      GITHUB_RELEASE_FILENAME: crouton.zip
      S3_KEY_JS: croutonjs
      S3_KEY: crouton
      PLUGIN: crouton
      MAINFILE: crouton.php
    steps:
      - uses: actions/checkout@v3
        id: code-checkout

      - name: Prepare crouton zip file
        run: |
          export ZIP_FILENAME_JS=croutonjs-build${GITHUB_RUN_NUMBER}-${GITHUB_SHA}.zip
          echo "ZIP_FILENAME_JS=${ZIP_FILENAME_JS}" >> $GITHUB_ENV
          export ZIP_FILENAME=crouton-build${GITHUB_RUN_NUMBER}-${GITHUB_SHA}.zip
          echo "ZIP_FILENAME=${ZIP_FILENAME}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_FILENAME_JS=${GITHUB_RELEASE_FILENAME_JS}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_FILENAME=${GITHUB_RELEASE_FILENAME}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_PATH_JS=${DIST_DIR_GITHUB_JS}/${GITHUB_RELEASE_FILENAME_JS}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_PATH=${DIST_DIR_GITHUB}/${GITHUB_RELEASE_FILENAME}" >> $GITHUB_ENV
          find ./ -type d | xargs chmod 755
          find ./ -name '*.php' | xargs chmod 644
          git archive --format=zip --output=${ZIP_FILENAME} ${GITHUB_SHA}
          DISABLE_NOTIFIER=true make deploy
          zip -r ${ZIP_FILENAME} croutonjs/dist/*
          TAG="${GITHUB_REF##*/}"
          cd croutonjs/dist; zip -r ../../${ZIP_FILENAME_JS} *; cd ../../
          mkdir -p $BUILD_DIR && mv $ZIP_FILENAME_JS $BUILD_DIR/ && mv $ZIP_FILENAME $BUILD_DIR/
          mkdir -p $DIST_DIR_S3_JS && cp $BUILD_DIR/$ZIP_FILENAME_JS $DIST_DIR_S3_JS/$ZIP_FILENAME_JS
          mkdir -p $DIST_DIR_GITHUB_JS && cp $BUILD_DIR/$ZIP_FILENAME_JS $DIST_DIR_GITHUB_JS/$GITHUB_RELEASE_FILENAME_JS
          mkdir -p $DIST_DIR_S3 && cp $BUILD_DIR/$ZIP_FILENAME $DIST_DIR_S3/$ZIP_FILENAME
          mkdir -p $DIST_DIR_GITHUB && cp $BUILD_DIR/$ZIP_FILENAME $DIST_DIR_GITHUB/$GITHUB_RELEASE_FILENAME
          curl -sLO https://raw.githubusercontent.com/bmlt-enabled/bmlt-wordpress-deploy/master/deploy-wordpress.sh
          chmod +x deploy-wordpress.sh
          curl -sLO https://raw.githubusercontent.com/bmlt-enabled/release-notes-tool/master/gh-release-notes.sh
          chmod +x gh-release-notes.sh
          ./gh-release-notes.sh readme.txt "wp"

      - name: Prepare artifact metadata
        id: prepare_artifact_metadata
        run: |
          echo ::set-output name=ARTIFACT_PATH_JS::./${GITHUB_RELEASE_PATH_JS}
          echo ::set-output name=ARTIFACT_NAME_JS::${GITHUB_RELEASE_FILENAME_JS}
          echo ::set-output name=ARTIFACT_PATH::./${GITHUB_RELEASE_PATH}
          echo ::set-output name=ARTIFACT_NAME::${GITHUB_RELEASE_FILENAME}

      - name: Release beta
        if: contains(github.ref, 'beta')
        id: beta_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          prerelease: true
          draft: false

      - name: Upload Beta Asset JS
        if: contains(github.ref, 'beta')
        id: beta-release-asset-js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.beta_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_PATH_JS }}
          asset_name: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_NAME_JS }}
          asset_content_type: application/zip

      - name: Upload Beta Asset WP
        if: contains(github.ref, 'beta')
        id: beta-release-asset-wp
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.beta_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_PATH }}
          asset_name: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_NAME }}
          asset_content_type: application/zip

      - name: Release stable
        if: "!contains(github.ref, 'beta')"
        id: stable_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: "changelog.txt"
          prerelease: false
          draft: false

      - name: Upload Stable Asset JS
        if: "!contains(github.ref, 'beta')"
        id: stable-release-asset-js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.stable_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_PATH_JS }}
          asset_name: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_NAME_JS }}
          asset_content_type: application/zip

      - name: Setup Node
        if: "!contains(github.ref, 'beta')"
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies and build ðŸ”§
        if: "!contains(github.ref, 'beta')"
        run: cd croutonjs/dist && npm version ${{ github.ref }}
      - name: Publish package on NPM ðŸ“¦
        if: "!contains(github.ref, 'beta')"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload Stable Asset WP
        if: "!contains(github.ref, 'beta')"
        id: stable-release-asset-wp
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.stable_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_PATH }}
          asset_name: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_NAME }}
          asset_content_type: application/zip

      - name: Publish Release to WP
        if: "!contains(github.ref, 'beta')"
        id: publish-release-wp
        run: |
          ./deploy-wordpress.sh

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#crouton'
        if: failure()
